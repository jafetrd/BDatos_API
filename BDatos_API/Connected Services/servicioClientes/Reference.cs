//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BDatos_API.servicioClientes {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clientes", Namespace="http://schemas.datacontract.org/2004/07/ServicioBroker.Models")]
    [System.SerializableAttribute()]
    public partial class Clientes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CLIENTEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CLIENTE {
            get {
                return this.CLIENTEField;
            }
            set {
                if ((object.ReferenceEquals(this.CLIENTEField, value) != true)) {
                    this.CLIENTEField = value;
                    this.RaisePropertyChanged("CLIENTE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="servicioClientes.IClientes", CallbackContract=typeof(BDatos_API.servicioClientes.IClientesCallback))]
    public interface IClientes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientes/Subscribe", ReplyAction="http://tempuri.org/IClientes/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientes/Subscribe", ReplyAction="http://tempuri.org/IClientes/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientes/Unsubscribe", ReplyAction="http://tempuri.org/IClientes/UnsubscribeResponse")]
        void Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientes/Unsubscribe", ReplyAction="http://tempuri.org/IClientes/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientes/obtenerTodosClientes", ReplyAction="http://tempuri.org/IClientes/obtenerTodosClientesResponse")]
        BDatos_API.servicioClientes.Clientes[] obtenerTodosClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientes/obtenerTodosClientes", ReplyAction="http://tempuri.org/IClientes/obtenerTodosClientesResponse")]
        System.Threading.Tasks.Task<BDatos_API.servicioClientes.Clientes[]> obtenerTodosClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientes/IClientes", ReplyAction="http://tempuri.org/IClientes/IClientesResponse")]
        void IClientes(string CLIENTE, string tipo_Cambio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientes/IClientes", ReplyAction="http://tempuri.org/IClientes/IClientesResponse")]
        System.Threading.Tasks.Task IClientesAsync(string CLIENTE, string tipo_Cambio);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientesCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientes/cambiosCliente", ReplyAction="http://tempuri.org/IClientes/cambiosClienteResponse")]
        void cambiosCliente(string CLIENTE, string tipo_Cambio);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientesChannel : BDatos_API.servicioClientes.IClientes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientesClient : System.ServiceModel.DuplexClientBase<BDatos_API.servicioClientes.IClientes>, BDatos_API.servicioClientes.IClientes {
        
        public ClientesClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ClientesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ClientesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ClientesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ClientesClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public void Unsubscribe() {
            base.Channel.Unsubscribe();
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync() {
            return base.Channel.UnsubscribeAsync();
        }
        
        public BDatos_API.servicioClientes.Clientes[] obtenerTodosClientes() {
            return base.Channel.obtenerTodosClientes();
        }
        
        public System.Threading.Tasks.Task<BDatos_API.servicioClientes.Clientes[]> obtenerTodosClientesAsync() {
            return base.Channel.obtenerTodosClientesAsync();
        }
        
        public void IClientes(string CLIENTE, string tipo_Cambio) {
            base.Channel.IClientes(CLIENTE, tipo_Cambio);
        }
        
        public System.Threading.Tasks.Task IClientesAsync(string CLIENTE, string tipo_Cambio) {
            return base.Channel.IClientesAsync(CLIENTE, tipo_Cambio);
        }
    }
}
