//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BDatos_API.ContenedoresSimple {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContenedorSimple", Namespace="http://schemas.datacontract.org/2004/07/ServicioBroker.Models")]
    [System.SerializableAttribute()]
    public partial class ContenedorSimple : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ALMACENField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BUQUEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REGIMENField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VIAJEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ALMACEN {
            get {
                return this.ALMACENField;
            }
            set {
                if ((object.ReferenceEquals(this.ALMACENField, value) != true)) {
                    this.ALMACENField = value;
                    this.RaisePropertyChanged("ALMACEN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BUQUE {
            get {
                return this.BUQUEField;
            }
            set {
                if ((object.ReferenceEquals(this.BUQUEField, value) != true)) {
                    this.BUQUEField = value;
                    this.RaisePropertyChanged("BUQUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REGIMEN {
            get {
                return this.REGIMENField;
            }
            set {
                if ((object.ReferenceEquals(this.REGIMENField, value) != true)) {
                    this.REGIMENField = value;
                    this.RaisePropertyChanged("REGIMEN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIAJE {
            get {
                return this.VIAJEField;
            }
            set {
                if ((object.ReferenceEquals(this.VIAJEField, value) != true)) {
                    this.VIAJEField = value;
                    this.RaisePropertyChanged("VIAJE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContenedoresSimple.IContenedorSimple", CallbackContract=typeof(BDatos_API.ContenedoresSimple.IContenedorSimpleCallback))]
    public interface IContenedorSimple {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/Subscribe", ReplyAction="http://tempuri.org/IContenedorSimple/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/Subscribe", ReplyAction="http://tempuri.org/IContenedorSimple/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/Unsubscribe", ReplyAction="http://tempuri.org/IContenedorSimple/UnsubscribeResponse")]
        void Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/Unsubscribe", ReplyAction="http://tempuri.org/IContenedorSimple/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/obtenerTodasImportaciones", ReplyAction="http://tempuri.org/IContenedorSimple/obtenerTodasImportacionesResponse")]
        BDatos_API.ContenedoresSimple.ContenedorSimple[] obtenerTodasImportaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/obtenerTodasImportaciones", ReplyAction="http://tempuri.org/IContenedorSimple/obtenerTodasImportacionesResponse")]
        System.Threading.Tasks.Task<BDatos_API.ContenedoresSimple.ContenedorSimple[]> obtenerTodasImportacionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/IContenedorImpoSimple", ReplyAction="http://tempuri.org/IContenedorSimple/IContenedorImpoSimpleResponse")]
        void IContenedorImpoSimple(string BUQUE, string VIAJE, string ALMACEN, string regimen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/IContenedorImpoSimple", ReplyAction="http://tempuri.org/IContenedorSimple/IContenedorImpoSimpleResponse")]
        System.Threading.Tasks.Task IContenedorImpoSimpleAsync(string BUQUE, string VIAJE, string ALMACEN, string regimen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/obtenerTodasExportaciones", ReplyAction="http://tempuri.org/IContenedorSimple/obtenerTodasExportacionesResponse")]
        BDatos_API.ContenedoresSimple.ContenedorSimple[] obtenerTodasExportaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/obtenerTodasExportaciones", ReplyAction="http://tempuri.org/IContenedorSimple/obtenerTodasExportacionesResponse")]
        System.Threading.Tasks.Task<BDatos_API.ContenedoresSimple.ContenedorSimple[]> obtenerTodasExportacionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/IContenedorExpoSimple", ReplyAction="http://tempuri.org/IContenedorSimple/IContenedorExpoSimpleResponse")]
        void IContenedorExpoSimple(string BUQUE, string VIAJE, string ALMACEN, string regimen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/IContenedorExpoSimple", ReplyAction="http://tempuri.org/IContenedorSimple/IContenedorExpoSimpleResponse")]
        System.Threading.Tasks.Task IContenedorExpoSimpleAsync(string BUQUE, string VIAJE, string ALMACEN, string regimen);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContenedorSimpleCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/cambiosImpoSimple", ReplyAction="http://tempuri.org/IContenedorSimple/cambiosImpoSimpleResponse")]
        void cambiosImpoSimple(string BUQUE, string VIAJE, string ALMACEN, string REGIMEN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedorSimple/cambiosExpoSimple", ReplyAction="http://tempuri.org/IContenedorSimple/cambiosExpoSimpleResponse")]
        void cambiosExpoSimple(string BUQUE, string VIAJE, string ALMACEN, string REGIMEN);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContenedorSimpleChannel : BDatos_API.ContenedoresSimple.IContenedorSimple, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContenedorSimpleClient : System.ServiceModel.DuplexClientBase<BDatos_API.ContenedoresSimple.IContenedorSimple>, BDatos_API.ContenedoresSimple.IContenedorSimple {
        
        public ContenedorSimpleClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ContenedorSimpleClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ContenedorSimpleClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ContenedorSimpleClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ContenedorSimpleClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public void Unsubscribe() {
            base.Channel.Unsubscribe();
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync() {
            return base.Channel.UnsubscribeAsync();
        }
        
        public BDatos_API.ContenedoresSimple.ContenedorSimple[] obtenerTodasImportaciones() {
            return base.Channel.obtenerTodasImportaciones();
        }
        
        public System.Threading.Tasks.Task<BDatos_API.ContenedoresSimple.ContenedorSimple[]> obtenerTodasImportacionesAsync() {
            return base.Channel.obtenerTodasImportacionesAsync();
        }
        
        public void IContenedorImpoSimple(string BUQUE, string VIAJE, string ALMACEN, string regimen) {
            base.Channel.IContenedorImpoSimple(BUQUE, VIAJE, ALMACEN, regimen);
        }
        
        public System.Threading.Tasks.Task IContenedorImpoSimpleAsync(string BUQUE, string VIAJE, string ALMACEN, string regimen) {
            return base.Channel.IContenedorImpoSimpleAsync(BUQUE, VIAJE, ALMACEN, regimen);
        }
        
        public BDatos_API.ContenedoresSimple.ContenedorSimple[] obtenerTodasExportaciones() {
            return base.Channel.obtenerTodasExportaciones();
        }
        
        public System.Threading.Tasks.Task<BDatos_API.ContenedoresSimple.ContenedorSimple[]> obtenerTodasExportacionesAsync() {
            return base.Channel.obtenerTodasExportacionesAsync();
        }
        
        public void IContenedorExpoSimple(string BUQUE, string VIAJE, string ALMACEN, string regimen) {
            base.Channel.IContenedorExpoSimple(BUQUE, VIAJE, ALMACEN, regimen);
        }
        
        public System.Threading.Tasks.Task IContenedorExpoSimpleAsync(string BUQUE, string VIAJE, string ALMACEN, string regimen) {
            return base.Channel.IContenedorExpoSimpleAsync(BUQUE, VIAJE, ALMACEN, regimen);
        }
    }
}
