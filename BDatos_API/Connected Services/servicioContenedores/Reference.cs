//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BDatos_API.servicioContenedores {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contenedor", Namespace="http://schemas.datacontract.org/2004/07/ServicioBroker.Models")]
    [System.SerializableAttribute()]
    public partial class Contenedor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ALMACENField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BUQUEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CONTENEDORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DIASField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ESTADOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ESTADO_VENCIMIENTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FECHA_ENTRADAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INICIALESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NUMEROField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRESENTACIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REGIMENField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VIAJEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ALMACEN {
            get {
                return this.ALMACENField;
            }
            set {
                if ((object.ReferenceEquals(this.ALMACENField, value) != true)) {
                    this.ALMACENField = value;
                    this.RaisePropertyChanged("ALMACEN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BUQUE {
            get {
                return this.BUQUEField;
            }
            set {
                if ((object.ReferenceEquals(this.BUQUEField, value) != true)) {
                    this.BUQUEField = value;
                    this.RaisePropertyChanged("BUQUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONTENEDOR {
            get {
                return this.CONTENEDORField;
            }
            set {
                if ((object.ReferenceEquals(this.CONTENEDORField, value) != true)) {
                    this.CONTENEDORField = value;
                    this.RaisePropertyChanged("CONTENEDOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DIAS {
            get {
                return this.DIASField;
            }
            set {
                if ((object.ReferenceEquals(this.DIASField, value) != true)) {
                    this.DIASField = value;
                    this.RaisePropertyChanged("DIAS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ESTADO {
            get {
                return this.ESTADOField;
            }
            set {
                if ((object.ReferenceEquals(this.ESTADOField, value) != true)) {
                    this.ESTADOField = value;
                    this.RaisePropertyChanged("ESTADO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ESTADO_VENCIMIENTO {
            get {
                return this.ESTADO_VENCIMIENTOField;
            }
            set {
                if ((object.ReferenceEquals(this.ESTADO_VENCIMIENTOField, value) != true)) {
                    this.ESTADO_VENCIMIENTOField = value;
                    this.RaisePropertyChanged("ESTADO_VENCIMIENTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FECHA_ENTRADA {
            get {
                return this.FECHA_ENTRADAField;
            }
            set {
                if ((object.ReferenceEquals(this.FECHA_ENTRADAField, value) != true)) {
                    this.FECHA_ENTRADAField = value;
                    this.RaisePropertyChanged("FECHA_ENTRADA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INICIALES {
            get {
                return this.INICIALESField;
            }
            set {
                if ((object.ReferenceEquals(this.INICIALESField, value) != true)) {
                    this.INICIALESField = value;
                    this.RaisePropertyChanged("INICIALES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NUMERO {
            get {
                return this.NUMEROField;
            }
            set {
                if ((object.ReferenceEquals(this.NUMEROField, value) != true)) {
                    this.NUMEROField = value;
                    this.RaisePropertyChanged("NUMERO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRESENTACION {
            get {
                return this.PRESENTACIONField;
            }
            set {
                if ((object.ReferenceEquals(this.PRESENTACIONField, value) != true)) {
                    this.PRESENTACIONField = value;
                    this.RaisePropertyChanged("PRESENTACION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REGIMEN {
            get {
                return this.REGIMENField;
            }
            set {
                if ((object.ReferenceEquals(this.REGIMENField, value) != true)) {
                    this.REGIMENField = value;
                    this.RaisePropertyChanged("REGIMEN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIAJE {
            get {
                return this.VIAJEField;
            }
            set {
                if ((object.ReferenceEquals(this.VIAJEField, value) != true)) {
                    this.VIAJEField = value;
                    this.RaisePropertyChanged("VIAJE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="servicioContenedores.IContenedor", CallbackContract=typeof(BDatos_API.servicioContenedores.IContenedorCallback))]
    public interface IContenedor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/Subscribe", ReplyAction="http://tempuri.org/IContenedor/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/Subscribe", ReplyAction="http://tempuri.org/IContenedor/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/Unsubscribe", ReplyAction="http://tempuri.org/IContenedor/UnsubscribeResponse")]
        void Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/Unsubscribe", ReplyAction="http://tempuri.org/IContenedor/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/obtenerTodasImportaciones", ReplyAction="http://tempuri.org/IContenedor/obtenerTodasImportacionesResponse")]
        BDatos_API.servicioContenedores.Contenedor[] obtenerTodasImportaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/obtenerTodasImportaciones", ReplyAction="http://tempuri.org/IContenedor/obtenerTodasImportacionesResponse")]
        System.Threading.Tasks.Task<BDatos_API.servicioContenedores.Contenedor[]> obtenerTodasImportacionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/IContenedorImpo", ReplyAction="http://tempuri.org/IContenedor/IContenedorImpoResponse")]
        void IContenedorImpo(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/IContenedorImpo", ReplyAction="http://tempuri.org/IContenedor/IContenedorImpoResponse")]
        System.Threading.Tasks.Task IContenedorImpoAsync(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/obtenerTodasExportaciones", ReplyAction="http://tempuri.org/IContenedor/obtenerTodasExportacionesResponse")]
        BDatos_API.servicioContenedores.Contenedor[] obtenerTodasExportaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/obtenerTodasExportaciones", ReplyAction="http://tempuri.org/IContenedor/obtenerTodasExportacionesResponse")]
        System.Threading.Tasks.Task<BDatos_API.servicioContenedores.Contenedor[]> obtenerTodasExportacionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/IContenedorExpo", ReplyAction="http://tempuri.org/IContenedor/IContenedorExpoResponse")]
        void IContenedorExpo(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/IContenedorExpo", ReplyAction="http://tempuri.org/IContenedor/IContenedorExpoResponse")]
        System.Threading.Tasks.Task IContenedorExpoAsync(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContenedorCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/cambiosImpo", ReplyAction="http://tempuri.org/IContenedor/cambiosImpoResponse")]
        void cambiosImpo(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContenedor/cambiosExpo", ReplyAction="http://tempuri.org/IContenedor/cambiosExpoResponse")]
        void cambiosExpo(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContenedorChannel : BDatos_API.servicioContenedores.IContenedor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContenedorClient : System.ServiceModel.DuplexClientBase<BDatos_API.servicioContenedores.IContenedor>, BDatos_API.servicioContenedores.IContenedor {
        
        public ContenedorClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ContenedorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ContenedorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ContenedorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ContenedorClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public void Unsubscribe() {
            base.Channel.Unsubscribe();
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync() {
            return base.Channel.UnsubscribeAsync();
        }
        
        public BDatos_API.servicioContenedores.Contenedor[] obtenerTodasImportaciones() {
            return base.Channel.obtenerTodasImportaciones();
        }
        
        public System.Threading.Tasks.Task<BDatos_API.servicioContenedores.Contenedor[]> obtenerTodasImportacionesAsync() {
            return base.Channel.obtenerTodasImportacionesAsync();
        }
        
        public void IContenedorImpo(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS) {
            base.Channel.IContenedorImpo(ID, BUQUE, CONTENEDOR, VIAJE, FECHA_ENTRADA, ESTADO, ALMACEN, tipo_Cambio, DIAS);
        }
        
        public System.Threading.Tasks.Task IContenedorImpoAsync(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS) {
            return base.Channel.IContenedorImpoAsync(ID, BUQUE, CONTENEDOR, VIAJE, FECHA_ENTRADA, ESTADO, ALMACEN, tipo_Cambio, DIAS);
        }
        
        public BDatos_API.servicioContenedores.Contenedor[] obtenerTodasExportaciones() {
            return base.Channel.obtenerTodasExportaciones();
        }
        
        public System.Threading.Tasks.Task<BDatos_API.servicioContenedores.Contenedor[]> obtenerTodasExportacionesAsync() {
            return base.Channel.obtenerTodasExportacionesAsync();
        }
        
        public void IContenedorExpo(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS) {
            base.Channel.IContenedorExpo(ID, BUQUE, CONTENEDOR, VIAJE, FECHA_ENTRADA, ESTADO, ALMACEN, tipo_Cambio, DIAS);
        }
        
        public System.Threading.Tasks.Task IContenedorExpoAsync(string ID, string BUQUE, string CONTENEDOR, string VIAJE, string FECHA_ENTRADA, string ESTADO, string ALMACEN, string tipo_Cambio, string DIAS) {
            return base.Channel.IContenedorExpoAsync(ID, BUQUE, CONTENEDOR, VIAJE, FECHA_ENTRADA, ESTADO, ALMACEN, tipo_Cambio, DIAS);
        }
    }
}
